# Generated by Django 2.0 on 2019-01-13 14:02

from django.conf import settings
import django.core.files.storage
from django.db import migrations, models
import django.db.models.deletion
import user.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdminUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=130, unique=True, verbose_name='username')),
                ('user_type', models.CharField(choices=[(None, 'type'), ('Owner', 'Owner'), ('Employee', 'Employee')], max_length=10)),
                ('name', models.CharField(max_length=130, verbose_name='full name')),
                ('phone_number', models.BigIntegerField(unique=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_staff', models.BooleanField(default=False, verbose_name='is_staff')),
                ('owner_email', models.CharField(max_length=250, null=True)),
                ('name_of_organization', models.CharField(max_length=250, null=True)),
                ('owner_adress', models.CharField(max_length=500, null=True)),
                ('number_of_vehicle', models.IntegerField(null=True)),
                ('number_staff', models.IntegerField(null=True)),
                ('number_driver', models.IntegerField(null=True)),
                ('date_of_joinig', models.DateTimeField(null=True)),
                ('pancard', models.CharField(max_length=20, null=True)),
                ('owner_photo', models.FileField(default='download_qf83Viq.jpeg', null=True, storage=django.core.files.storage.FileSystemStorage(location='media/'), upload_to='')),
                ('gstnumber', models.CharField(max_length=200, null=True)),
                ('weburl', models.CharField(max_length=200, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Admin User',
                'verbose_name_plural': 'Admin Users',
                'ordering': ('username',),
            },
            managers=[
                ('objects', user.manager.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AdminDriver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('license_no', models.CharField(max_length=100, null=True)),
                ('hour_on_duty', models.IntegerField(null=True)),
                ('driver_mobile_no', models.CharField(max_length=12, null=True)),
                ('address', models.CharField(max_length=500)),
                ('experience', models.IntegerField(null=True)),
                ('driver_review', models.CharField(max_length=500, null=True)),
                ('driver_photo', models.FileField(null=True, storage=django.core.files.storage.FileSystemStorage(location='media/'), upload_to='')),
                ('owner_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin Driver',
                'verbose_name_plural': 'Admin Drivers',
            },
        ),
        migrations.CreateModel(
            name='child',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('child_name', models.CharField(max_length=100, null=True)),
                ('vehical_number', models.CharField(max_length=20, null=True)),
                ('school_name', models.CharField(max_length=8)),
                ('school_arrival_time', models.CharField(max_length=100, null=True)),
                ('school_departure_time', models.CharField(max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Guest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('phone_number', models.BigIntegerField(null=True)),
                ('number_of_vehicle', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Parent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('parent_name', models.CharField(max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('parent_phoneno', models.CharField(max_length=20, unique=True)),
                ('password', models.CharField(max_length=100)),
            ],
        ),
        migrations.AddField(
            model_name='child',
            name='parent',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='user.Parent'),
        ),
    ]
